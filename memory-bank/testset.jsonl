
    {
        "user_input":"How can Lightdash be integrated with other tools using SDKs?",
        "reference_contexts":[
            "Usage analytics - Lightdash Source: https:\/\/docs.lightdash.com\/references\/usage-analytics Lightdash home page Search... Ctrl KAsk AI Search... Navigation Reference Usage analytics Introduction Welcome to Lightdash Setting up a new project Explore and analyze Quickstart Guides Reference Build your semantic layer Developer quickstart CLI quickstart Guides Reference Workspace and user management Guides Reference Roles and permissions Personal access tokens Integrations Embedding and SDKs Embedding quickstart Embedding reference Self-hosting and deployment Self-Host Lightdash Lightdash Cloud vs. Self-Hosted Updating Lightdash Customize deployment Contact On this page * Usage analytics dashboards * User Activity dashboard There are two ways of understanding user activity: 1. Usage Analytics dashboards - these are dashboards created by Lightdash which give you an overview of your project\u2019s content and user activity. 2."
        ],
        "reference":"Lightdash can be integrated with other tools through its SDKs, as mentioned in the \"Integrations Embedding and SDKs\" section of the documentation.",
        "synthesizer_name":"single_hop_specifc_query_synthesizer"
    }

    {
        "user_input":"How are BigQuery query tags stored?",
        "reference_contexts":[
            "Query tags - this is metadata which is added to your data warehouse queries and gives you information about who is querying data and what they are querying. Usage analytics dashboards Each project has usage analytics dashboards created by Lightdash giving you an overview of your project\u2019s content and user activity. To see your usage analytics dashboards for a project, just click on the settings icon, project settings, then usage analytics. Or you can also use our search bar to get direct access to the different analytics dashboards by typing the name of the dashboard (eg: User activity) User Activity dashboard This dashboard gives you an overview of the users in your project and the activity of your users. Here\u2019s an overview of the fields used in the dashboard: * Number of users : the total number of users that have access to the project. * Number of viewers : the number of users with the viewer role that have access to the project. * Number of editors : the number of users with the editor role that have access to the project. * Number of admins : the number of users with the admin role that have access to the project. * % of weekly querying users : the % of users which have run at least one query in the project in the last 7 days (out of all users in your project). Queries include viewing existing charts and dashboards. * Number of weekly querying users : the number of users which have run at least one query in the project in the last 7 days. * Weekly average number of queries per user : the rolling 7 day average number of queries that each user is running in your project. * Users that have run the most queries in the last 7 days : a list of the users that have run the most queries in your project in the last 7 days. * Users that have updated the most charts in the last 7 days : a list of users that have updated (including created) the most charts in the project in the last 7 days. * Users that have not run a query in the last 90 days : a list of users that have not run a query in the project in the last 7 days. This includes viewing charts and dashboards. Query tags Query tags are metadata which is added to your data warehouse queries and gives you information about each query executed. The following query tags are sent: Query Tag Detail organization_uuid Lightdash organization unique identifier. project_uuid Lightdash project unique identifier. user_uuid User unique identifier. dashboard_uuid Dashboard unique identifier. chart_uuid Chart unique identifier. explore_name Name of the explore. query_context Which context the query was executed in. For queries in: - dashboards use dashboardView - explore use exploreView - chart use chartView - sql chart use sqlChartView Query tags are stored differently in each data warehouse: Data Warehouse Query Tag --- --- BigQuery Persists in the labels parameter in your job history. Snowflake Persists in the comment parameter in your query history. Trino Appends to the SQL in your query history. Redshift Appends to the SQL in your query history. Databricks Appends to the SQL in your query history. Postgres Appends to the SQL in your query history."
        ],
        "reference":"BigQuery query tags persist in the labels parameter in your job history.",
        "synthesizer_name":"single_hop_specifc_query_synthesizer"
    }

    {
        "user_input":"How can I configure the visibility of Events in the catalog?",
        "reference_contexts":[
            "Configuring global visibility of metrics * Assigning categories to metrics * Configuring default time settings in .yml * Set a table-level default time dimension * Set a metric-level default time dimension * Canvas view (alpha) * How to use the \u2018Canvas view\u2019 for Metric trees: * Roles and permissions The Spotlight features are currently in beta. We\u2019re actively testing and improving them \u2014 some of the functionality might be subject to change. Getting Started Lightdash users don\u2019t need to do anything to get started! Spotlight features use your existing Lightdash semantic layer and metrics definitions, so you can get started today. Head to the Metrics Catalog under the Browse menu in the navigation bar. Browsing the catalog Browse all the project metrics you have access to (based on permissions and user-attributes) in the Metrics Catalog. 1. Search : Easily find metrics by their names or .yml descriptions using the searchbar. 2. View .yml descriptions : Click on any description to expand and view the full content, including rendered Markdown. 3. Categories : Use categories to streamline your metrics and KPIs. Filter metrics by category and add new ones directly in the UI. Users with editor permissions and above can click on any category cell to edit, rename, change its color, or delete it. 4. View popularity : Discover a metric\u2019s popularity and see where it\u2019s being used. Click to explore a complete list of charts which use the metric. Metrics are sorted by default to highlight the most used ones first. 5. Explore : Interactive viewers and above can dive deeper by clicking Explore to visualize the metric in a chart format. Exploring a metric Visualize your metrics in the Metrics Explorer. 1. Plot over time : View your selected metric plotted over a time dimension as a line chart. You can adjust this dimension or set a default time dimension in your .yml to simplify the process for users. See how 2. Filter by date : Use the date picker with convenient presets for quick selection. See how default presets work based on the granularity 3. Adjust the time granularity : Refine your view by choosing the desired level of date granularity. 4. Filter by a dimension: Filter your metric by any string or boolean dimension from the same table. 5. Segment-by : Break down the metric by any non-time dimension in your dataset. 6. Compare to: * \u2018This time last year\u2019 : Compare the selected time period to the same period last year * \u2018Another metric\u2019: Compare to any other metric in the project that has a default time dimension specified in the.yml. This includes joins See how 7. Drag to zoom: Click and drag across the chart to highlight the desired time range or data points, then release to zoom in on that segment. Hit \u2018Reset Zoom\u2019 to reset chart. Curating Spotlight for your business users Spotlight is designed to be a tool for your business users to explore and understand your data. To make Spotlight more useful for your business users, you can curate the metrics they can see and explore. To do this, you can: * Control the visibility of metrics in the catalog * Add categories to your metrics * Add default time settings to your metrics All through your Lightdash .yml files. Configuring global visibility of metrics You can control the visibility of metrics in the catalog by creating a new file called lightdash.config.yml in the root of your dbt project. See this video for an example on how to set this up: Step-by-step guide 1. Add the following to your lightdash.config.yml file: Copy Ask AI spotlight: default_visibility: show The default visibility can be set toshow or hide.If you don\u2019t set this, the default visibility will be show, so all metrics will be visible in the catalog by default (but other settings like user attributes will still apply). This will set the default visibility of metrics in the catalog to show for all metrics in your project. You can also set this to hide if you prefer to hide metrics by default and then override this on a per-model\/metric basis. 1. Now that you\u2019ve set the default visibility, you can override this on a per-model\/metric basis. Copy Ask AI models: name: events meta: spotlight: visibility: hide This will hide the events model from the catalog. 1. If there are metrics in the events model that you want to make visible, you can override the default visibility for those metrics. Copy Ask AI models: name: events meta: spotlight: visibility: hide metrics: name: event_count type: count spotlight: visibility: show Once you compile your project, you\u2019ll see the event_count metric in the catalog, even though the events model is hidden. Assigning categories to metrics Categories are a great way to organize your metrics in the catalog. You can create a new category by adding a new categories field to your lightdash.config.yml file. Here\u2019s a video showing how to set this up: Step-by-step guide 1. Add the following to your lightdash.config.yml file: Copy Ask AI spotlight: categories: revenue: # Required, this is the name of the category, and how it will be referenced in the catalog. It must be unique. label: Revenue # Required, this is what will be displayed in the catalog color: \"orange\" # Optional, defaults to \"gray\", with the option to choose from a range of colors: \"gray\", \"violet\", \"red\", \"orange\", \"green\", \"blue\", \"indigo\", \"pink\", \"yellow\" Now that you\u2019ve added a category, you can assign metrics to it by adding a categories field to your models .yml file. Copy Ask AI models: name: events meta: spotlight: visibility: show categories: revenue This will add the revenue category to all metrics in the events model. If you want to add another category to a specific metric, you can do so by adding the categories field to the metric\u2019s .yml file. And remember, you can only add categories that have been defined in the lightdash.config.yml file. 1. Now you can add the marketing category to the event_count"
        ],
        "reference":"You can configure the visibility of the \"events\" model by adding a `meta` section to its `.yml` file and setting `spotlight: visibility: hide`. If you want to make specific metrics within the \"events\" model visible, you can override the default visibility for those metrics by adding a `spotlight: visibility: show` setting to the individual metric's configuration.",
        "synthesizer_name":"single_hop_specifc_query_synthesizer"
    }

    {
        "user_input":"How can I format GBP values in Lightdash, and what is the equivalent spreadsheet-style format expression for the legacy 'gbp' format?",
        "reference_contexts":[
            "<1-hop>\n\na given field. Like SQL\u2019s SUM function. The sum metric can be used on any numeric dimension or, for custom SQL, any valid SQL expression that gives a numeric table column. For example, this creates a metric total_revenue by adding up the values in the revenue dimension: Copy Ask AI columns: name: revenue meta: metrics: total_revenue: type: sum string Used with fields that include letters or special characters. The string metric can be used on any valid SQL expression that gives you a string value. It can only be used on aggregations, which means either aggregate metrics or custom SQL that references other metrics. You cannot build a string metric by referencing other unaggregated dimensions from your model. string metrics are rarely used because most SQL aggregate functions don\u2019t return strings. One common exception is MySQL\u2019s GROUP_CONCAT function. For example, this creates a metric product_name_group by combining the unique values of a dimension called product_name: Copy Ask AI columns: name: product_name meta: metrics: product_name_group: type: string sql: 'GROUP_CONCAT(${TABLE}.product_name)' Description We add default descriptions to all of the metrics you include in your model. But, you can override these using the description parameter when you define your metric. Copy Ask AI metrics: num_user_ids: type: count description: 'Total number of user IDs. NOTE: this is NOT counting unique user IDs' Format You can use the format parameter to have your metrics show in a particular format in Lightdash. Lightdash supports spreadsheet-style format expressions for all metric types. To help you build your format expression, we recommend using https:\/\/customformats.com\/. Copy Ask AI metrics: total_us_revenue: type: sum description: 'Total revenue in USD, with two decimal places, compacted to thousands' format: '$#,##0.00,\" K\"' # 505,430 will appear as '$505.43 K' percent_of_total_global_revenue: type: number description: 'Percent of total global revenue coming from US revenue.' sql: ${total_us_revenue} \/ ${total_global_revenue} format: '0.00%' # 0.67895243 will appear as '67.89% Example format expressions Description Format Expression Raw Value Formatted Output Adds \u201ckm\u201d suffix to the value #,##0.00\" km\" 100000.00 100,000.00 km 15000.25 15,000.25 km 500 500.00 km Format date with 12-hour clock m\/d\/yyyy h:mm AM\/PM 2023-09-05T15:45:00Z 9\/5\/2023 3:45 PM 2024-01-20T08:30:00Z 1\/20\/2024 8:30 AM Display the full name of the day dddd 2023-09-05T15:45:00Z Tuesday 2024-01-20T08:30:00Z Saturday Format positive, negative, and zero values \"\u2b06\ufe0f \"0;\"\u2b07\ufe0f \"0;0 -500 \u2b07\ufe0f 500 200 \u2b06\ufe0f 200 Text formatting \"Delivered in \"@ 2 weeks Delivered in 2 weeks 18 hours Delivered in 18 hours Percentage formatting #,##0.00% 0.6758 67.58% 0.1 10.00% 0.002 0.20% No formatting 12345232 12345232 56.7856 57 Currency formatting [$]#,##0.00 15430.75436 $15,430.75 15430.75436 $15,430.75 Compact currency in thousands [$]#,##0,\"K\" 15430.75436 $15K 15430.75436 $15.43K Compact currency in millions [$]#,##0.00,,\"M\" 13334567 $13.33M 120000000 $120.00M (Legacy) format and round options Spreadsheet-style format expressions are the recommended way of adding formatting to your metrics in Lightdash. There are legacy formatting options, listed below, which are less flexible than the spreadsheet-style formatting. If you use both legacy and spreadsheet-style formatting options for a single metric, Lightdash will ignore the legacy format and round options and only apply the spreadsheet-style formatting expression. #### Format (legacy) Copy Ask AI models: name: sales_stats columns: name: revenue description: 'Total estimated revenue in GBP based on forecasting done by the finance team.' meta: metrics: total_revenue: label: 'Total revenue GBP' type: SUM format: 'gbp' These are the options: Option Equivalent format expression Description Raw value Displayed value km \u2019#,##0.00\u201d km\u201c\u2018 Adds the suffix km to your value 10 10 km mi \u2019#,##0.00\u201d mi\u201c\u2018 Adds the suffix mile to your value 10 10 mi usd \u2019[$]#,##0.00\u2019 Adds the $ symbol to your number value 10 $10.00 gbp \u2019[$\u00a3]#,##0.00\u2019 Adds the \u00a3 symbol to your number value 10 \u00a310.00 eur \u2019[$\u20ac]#,##0.00\u2019 Adds the \u20ac symbol to your number value 10 \u20ac10.00 jpy \u2019[$\u00a5]#,##0.00\u2019 Adds the \u00a5 symbol to your number value 10 \u00a510 percent \u2019#,##0.00%\u2018 Adds the % symbol and multiplies your value by 100 0.1 %10 id \u20190\u2019 Removes commas and spaces from number or string types so that they appear like IDs. 12389572 12389572 #### Round (legacy) You can round values to appear with a certain number of decimal points. Copy Ask AI models: name: sales columns: name: revenue meta: metrics: total_revenue: type: sum round: 0 # equivalent format expression: '#,##0.0' Compact You can compact values in your YAML. For example, if I wanted all of my revenue values to be shown in thousands (e.g. 1,500 appears as 1.50K), then I would write something like this in my .yml: Copy Ask AI models: name: sales columns: name: revenue meta: dimension: compact: thousands # You can also use 'K' Value Alias Equivalent format expression Example output thousands \u201dK\u201d and \u201cthousand\u201d \u2019#,##0,\u201d K\u201d\u2019 or \u2019#,##0.00,\u201d K\u201c\u2018 1K millions \u201dM\u201d and \u201cmillion\u201d \u2019#,##0,,\u201d M\u201d\u2019 or \u2019#,##0.00,,\u201d M\u201c\u2018 1M billions \u201dB\u201d and \u201cbillion\u201d \u2019#,##0,,,\u201d B\u201d\u2019 or \u2019#,##0.00,,,\u201d B\u201c\u2018 1B trillions \u201dT\u201d and \u201ctrillion\u201d \u2019#,##0,,,,\u201d T\u201d\u2019 or \u2019#,##0.00,,,,\u201d T\u201c\u2018 1T kilobytes \u201dKB\u201d and \u201ckilobyte\u201d 1KB megabytes \u201dMB\u201d and \u201cmegabyte\u201d 1MB gigabytes \u201dGB\u201d and \u201cgigabyte\u201d 1GB terabytes \u201dTB\u201d and \u201cterabyte\u201d 1TB petabytes \u201dPB\u201d and \u201cpetabyte\u201d 1PB kibibytes \u201dKiB\u201d and \u201ckibibyte\u201d 1KiB mebibytes \u201dMiB\u201d and \u201cmebibyte\u201d 1MiB gibibytes \u201dGiB\u201d and \u201cgibibyte\u201d 1GiB tebibytes \u201dTiB\u201d and \u201ctebibyte\u201d 1TiB pebibytes \u201dPiB\u201d and \u201cpebibyte\u201d 1PiB ## Custom SQL in aggregate metrics You can include custom SQL in your metric definition to build more advanced metrics using the sql parameter. Inside the sql parameter, you can reference any other dimension from the given model and any joined models. You can\u2019t reference other metrics. You can reference dimensions from the same model like this: sql: \"${dimension_in_this_model}\" Or from joined models like this: sql: \"${other_model.dimension_in_other_model}\" Copy Ask AI metrics: num_unique_7d_web_active_user_ids: type: count_distinct # metric type sql: 'IF(${is_7d_web_active}, ${user_id}, NULL)' num_unique_paid_user_ids: type: count_distinct sql: 'IF(${subscriptions.is_active}, ${user_id}, NULL)' Using custom SQL in non-aggregate metrics In non-aggregate metrics, you can reference any other metric from the given model and any joined models. You can\u2019t reference other dimensions. You can reference metrics from the same model like this: sql: \"${metric_in_this_model}\"Or from joined models like this: sql: \"${other_model.metric_in_other_model}\" Copy Ask AI metrics: num_unique_users: type: count_distinct is_num_unique_users_above_100: type: boolean sql: 'IF(${num_unique_users} > 100, TRUE, FALSE)'",
            "<2-hop>\n\nAdditional dimensions * Adding different formatting * Comparing or combining columns * Parsing JSON columns * Adding multiple timezones for the same dimension * Using additional dimensions in metrics Dimensions usually match 1:1 with columns in your dbt models (see additional dimensions for counterexamples). Adding dimensions to your project Read more about adding dimensions to your project in our docs here. For a dimension to appear in Lightdash, you just need to declare it in your dbt model\u2019s YAML file. Copy Ask AI models: name: my_model columns: name: user_id # will be \"User id\" in LightDash description: \"Unique identifier for a user.\" Dimension configuration To customize the dimension, you can do it in your dbt model\u2019s YAML file. If you want to declare multiple dimensions based on the same column, check additional dimensions section. Copy Ask AI models: name: sales_stats meta: group_details: finance: label: Finance description: Finance-related fields. joins: join: web_sessions sql_on: ${web_sessions.date} = ${sales_stats.date} columns: name: revenue_gbp_total_est description: 'Total estimated revenue in GBP based on forecasting done by the finance team.' meta: dimension: type: number label: 'Total revenue' # this is the label you'll see in Lightdash description: 'My custom description' # you can override the description you'll see in Lightdash here : 'IF(${TABLE}.revenue_gbp_total_est = NULL, 0, ${registered_user_email})' # custom SQL applied to the column from dbt used to define the dimension hidden: false format: '[$\u00a3]#,##0.00' # GBP rounded to two decimal points groups: ['finance'] name: forecast_date description: 'Date of the forecasting.' meta: dimension: type: date time_intervals: ['DAY', 'WEEK', 'MONTH', 'QUARTER'] # not required: the default time intervals for dates are `['DAY', 'WEEK', 'MONTH', 'YEAR']` urls: label: 'Open in forecasting tool' : 'https:\/\/finance.com\/forceasts\/weeks\/${ value.raw }' label: Open in Google Calendar : 'https:\/\/calendar.google.com\/calendar\/u\/0\/r\/day\/${ value.formatted |split: \"-\" |join: \"\/\"}' required_attributes: is_admin: 'true' name: date meta: dimension: type: date day_of_week_num: type: number label: 'Day of Week (number)' : 'day_of_week(${date})' day_of_week_day: type: date label: 'Day of Week (day)' : ${date} format: 'dddd' is_weekday_or_weekend: type: boolean label: 'Weekday or Weekend' : \"case when day_of_week(${date}) < 5 then 'weekday' else 'weekend' end\" All the properties you can customize: Property Required Value Description label No string Custom label. If you set this property, this is what you\u2019ll see in Lightdash instead of the dimension name. No Dimension type The dimension type is automatically pulled from your table schemas in Lightdash but you can override the type using this property. description No string Description of the dimension in Lightdash. You can use this to override the description you have for the dimension in dbt. sql No string Custom SQL applied to the column used to define the dimension. time_intervals No \u2019default\u2019 or OFF or an array[] containing elements of date, numeric or string options \u2019default\u2019 (or not setting the time_intervals property) will be converted into [\u2018DAY\u2019, \u2018WEEK\u2019, \u2018MONTH\u2019, \u2018QUARTER\u2019, \u2018YEAR\u2019] for dates and [\u2018RAW\u2019, \u2018DAY\u2019, \u2018WEEK\u2019, \u2018MONTH\u2019, \u2018QUARTER\u2019, \u2018YEAR\u2019] for timestamps; if you want no time intervals set \u2018OFF\u2019. hidden No boolean If set to true, the dimension is hidden from Lightdash. By default, this is set to false if you don\u2019t include this property. No string This option will compact the number value (e.g. 1,500 to 1.50K). Currently supports one of the following: [\u2018thousands\u2019, \u2018millions\u2019, \u2018billions\u2019, \u2018trillions\u2019, \u2018kilobytes\u2019, \u2018megabytes\u2019, \u2018gigabytes\u2019, \u2018terabytes\u2019, \u2018petabytes\u2019, \u2018kibibytes\u2019, \u2018mebibytes\u2019, \u2018gibibytes\u2019, \u2018tebibytes\u2019, \u2018pebibytes\u2019] No string This option will format the output value on the results table and CSV export. Supports spreadsheet-style formatting (e.g. #,##0.00). Use this website to help build your custom format.` No string or string[] If you set this property, the dimension will be grouped in the sidebar with other dimensions with the same group label. No Array of { url, label } Adding urls to a dimension allows your users to click dimension values in the UI and take actions, like opening an external tool with a url, or open at a website. You can use liquid templates to customise the link based on the value of the dimension. required_attributes No Object with { user_attribute, value } Limits access to users with those attributes No Object with { value, color } Color for the values in the chart ## Type The types of your dimensions are pulled from your data warehouse, automatically. You can override these types using the type meta tag in your .yml file. If you run lightdash generate to generate your .yml files, then Lightdash will add the type from your data warehouse to your .yml files automatically. Copy Ask AI name: user_created_date meta: dimension: type: date We currently support these dimension types: Dimension Types string number timestamp date boolean Description Column descriptions in your YAML file are automatically pulled into Lightdash and you can spot them if you hover over the dimension name. Descriptions support any formatting that works with YAML, but the three characters used most often are: Quotes for escaping When you surround text with double or single quotes it will escape the text between so that any special characters recognized by YAML will still pass through to the Lightdash UI. Copy Ask AI description: 'The contents of this column include this & that.' Greater than symbol for folded text blocks When you use >- it allows you to type descriptions that are multiple lines long in the YAML file, but the text will be combined into a single line when parsed. The lightdash generate command will automatically add this to keep YAML files easy to read. This description in YAML: Copy Ask AI name: product_tier description: - This is a longer description... ...that requires multiple lines and it will be combined in the Lightdash UI Will appear like this in the Lightdash UI: Copy Ask AI This is a longer description......that requires multiple lines and it will be combined in the Lightdash UI Vertical bar for preserving line breaks If you need line breaks to stay in place when they show up in the Lightdash UI, you can use a | character like this: Copy Ask AI name: product_tier description: | This is a longer description... ...that requires multiple lines and it"
        ],
        "reference":"To format GBP values in Lightdash, you can use the legacy format option 'gbp'. The equivalent spreadsheet-style format expression for this is '[$\u00a3]#,##0.00'.",
        "synthesizer_name":"multi_hop_specific_query_synthesizer"
    }

    {
        "user_input":"How can I authenticate my Lightdash CLI using environment variables, specifically referencing the LIGHTDASH_URL and LIGHTDASH_API_KEY?",
        "reference_contexts":[
            "<1-hop>\n\nLightdash Preview - Lightdash Source: https:\/\/docs.lightdash.com\/guides\/cli\/how-to-use-lightdash-preview Lightdash home page Search... \u2318KAsk AI Search... Navigation CLI quickstart Lightdash Preview Introduction Welcome to Lightdash Setting up a new project Explore and analyze Quickstart Guides Reference Build your semantic layer Developer quickstart CLI quickstart How to install the Lightdash CLI Authenticating your CLI (login) Upgrading your Lightdash CLI Autogenerate Lightdash-ready .yml files for your models Sync your changes with Lightdash deploy Test your changes with Lightdash compile Guides Reference Workspace and user management Guides Reference Integrations Embedding and SDKs Embedding quickstart Embedding reference Self-hosting and deployment Self-Host Lightdash Lightdash Cloud vs. Self-Hosted Updating Lightdash Customize deployment Contact On this page * Run lightdash preview from inside your project * Set up developer previews on your pull requests * Step 1: add the credentials to Github secrets * Step 2: Create start-preview.yml and close-preview.yml workflows in Github *",
            "<2-hop>\n\nHow to install the Lightdash CLI Authenticating your CLI (login) Upgrading your Lightdash CLI Autogenerate Lightdash-ready .yml files for your models Sync your changes with Lightdash deploy Test your changes with Lightdash compile Guides Reference Workspace and user management Guides Reference Integrations Embedding and SDKs Embedding quickstart Embedding reference Self-hosting and deployment Self-Host Lightdash Lightdash Cloud vs. Self-Hosted Updating Lightdash Customize deployment Contact On this page * Set active project * Now that you\u2019ve logged in, you\u2019re ready to use the CLI Login You can login on the CLI from your browser using OAuth2. To log in to your Lightdash instance using OAuth2, run the following command: Copy Ask AI lightdash login https:\/\/{{ lightdash_domain }} --oauth where {{ lightdash_domain }} is the address for your running Lightdash instance. For example Lightdash cloud users in the US would type lightdash login https:\/\/app.lightdash.cloud if you\u2019re in Europe you\u2019d typelightdash login https:\/\/eu1.lightdash.cloud.This will open a new tab in your default browser. Log in to your Lightdash account (if you\u2019re not already logged in), then authorize the lightdash-cli client.Once authorized, you\u2019ll be logged in and ready to use the CLI. 2. If you use your email + password in the browser, login with your email and password. To login to your Lightdash instance run the following command and provide your login email and password: Copy Ask AI lightdash login https:\/\/{{ lightdash_domain }} where {{ lightdash_domain }} is the address for your running Lightdash instance. For example Lightdash cloud users in the US would type lightdash login https:\/\/app.lightdash.cloud if you\u2019re in Europe you\u2019d typelightdash login https:\/\/eu1.lightdash.cloud. 3. If you use single sign-on (SSO) in the browser, login with a personal access token. First, you\u2019ll need to create a new personal access token in the UI by going to Settings > Personal Access Tokens. You can\u2019t use an existing personal access token! You have to create a new one just for yourself. Then, run the following command in your project: Copy Ask AI lightdash login https:\/\/{{ lightdash_domain }} --token where https:\/\/my-lightdash.domain.com is the address for your running Lightdash instance. For example Lightdash cloud users in the US would type lightdash login https:\/\/app.lightdash.cloud if you\u2019re in Europe you\u2019d typelightdash login https:\/\/eu1.lightdash.cloud. 4. If you're running in a CI\/CD pipeline, login with environment variables You can use the following environment variables to authenticate yourself on each command: * LIGHTDASH_API_KEY a personal access token you can generate in the app under the user settings * LIGHTDASH_URL address for your running Lightdash instance * LIGHTDASH_PROXY_AUTHORIZATION if your Lightdash instance is behind a proxy like Cloud IAP you can set here Proxy-Authentication header value Example: Copy Ask AI LIGHTDASH_API_KEY=946fedb74003405646867dcacf1ad345 LIGHTDASH_URL=\"https:\/\/{{ lightdash_domain }}\" LIGHTDASH_PROXY_AUTHORIZATION=\"Bearer <JWT_TOKEN>\" lightdash preview Where {{ lightdash_domain }} is your domain. For Lightdash Cloud users use https:\/\/app.lightdash.cloud Set active project When you login you\u2019ll be asked to set an active project. Your active project is just the one that you\u2019re working on\/developing in. Your organization might just have one project, so that makes your decision easy! You can change your active project by running: Copy Ask AI lightdash config set-project Or you can use the LIGHTDASH_PROJECT environment variable to indicate what project UUID the command should use. Example: Copy Ask AI LIGHTDASH_PROJECT=\"3675b69e-8324-4110-bdca-059031aa8da3\" lightdash deploy Now that you\u2019ve logged in, you\u2019re ready to use the CLI You can see all of the actions available on the CLI by typing this in your terminal: Copy Ask AI lightdash Some of our favourites are: * Automatically generating .yml for your dbt models using lightdash generate * Testing your changes with developer previews using lightdash preview * Deploying your changes to production using lightdash deploy How to install the Lightdash CLIUpgrading your Lightdash CLI Assistant Responses are generated using AI and may contain mistakes."
        ],
        "reference":"To authenticate your Lightdash CLI using environment variables, you can set the LIGHTDASH_URL and LIGHTDASH_API_KEY. The LIGHTDASH_URL should be the address for your running Lightdash instance, such as \"https:\/\/app.lightdash.cloud\" for Lightdash Cloud users in the US. The LIGHTDASH_API_KEY is a personal access token that can be generated in the app under user settings. For example, you would use the command: LIGHTDASH_API_KEY=your_api_key LIGHTDASH_URL=\"https:\/\/app.lightdash.cloud\" lightdash preview.",
        "synthesizer_name":"multi_hop_specific_query_synthesizer"
    }

    {
        "user_input":"How can I use the Metrics Explorer to run metrictotal?",
        "reference_contexts":[
            "<1-hop>\n\nGet apiv1projects datacatalogmetrics with time dimensions - Lightdash Source: https:\/\/docs.lightdash.com\/api-reference\/catalog\/get-apiv1projects-datacatalogmetrics-with-time-dimensions Lightdash home page Search... \u2318KAsk AI Search... Navigation Catalog Get apiv1projects datacatalogmetrics with time dimensions API Reference Projects My Account User attributes SSH Keypairs SQL runner Spotlight Spaces Roles & Permissions Integrations Share links Schedulers Exploring Charts Content Organizations Notifications Metrics Explorer User Groups API Reference Git Integration Dashboards Exports Comments Catalog Get apiv1projects datacatalog Get apiv1projects datacatalog metadata  ",
            "<2-hop>\n\nPost apiv1projects metricsexplorer runmetrictotal - Lightdash Source: https:\/\/docs.lightdash.com\/api-reference\/metrics-explorer\/post-apiv1projects-metricsexplorer-runmetrictotal Lightdash home page Search... Ctrl KAsk AI Search... Navigation Metrics Explorer Post apiv1projects metricsexplorer runmetrictotal API Reference Projects My Account User attributes SSH Keypairs SQL runner Spotlight Spaces Roles & Permissions Integrations Share links Schedulers Exploring Charts Content Organizations Notifications Metrics Explorer POST Post apiv1projects metricsexplorer runmetricexplorerquery POST Post apiv1projects metricsexplorer runmetrictotal User Groups  Metrics Explorer Post apiv1projects metricsexplorer runmetrictotal API Reference Projects My Account User attributes SSH Keypairs SQL runner Spotlight Spaces Roles & Permissions Integrations Share links Schedulers Exploring Charts Content Organizations Notifications Metrics Explorer POST Post apiv1projects metricsexplorer runmetricexplorerquery"
        ],
        "reference":"You can use the Metrics Explorer to run metrictotal by utilizing the POST apiv1projects metricsexplorer runmetrictotal API endpoint.",
        "synthesizer_name":"multi_hop_specific_query_synthesizer"
    }

